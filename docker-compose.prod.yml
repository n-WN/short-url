version: '3.8'

services:
  postgres:
    image: postgres:15-alpine
    container_name: shorturl_postgres
    environment:
      POSTGRES_DB: shorturl
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD:-your_secure_password}
    ports:
      - "127.0.0.1:5432:5432"  # 只绑定本地接口
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./sql/migrations:/docker-entrypoint-initdb.d
    networks:
      - shorturl_network
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres -d shorturl"]
      interval: 30s
      timeout: 10s
      retries: 3
    restart: unless-stopped

  redis:
    image: redis/redis-stack:latest
    container_name: shorturl_redis
    ports:
      - "127.0.0.1:6379:6379"  # 只绑定本地接口
      - "127.0.0.1:8001:8001"  # RedisInsight只在本地访问
    volumes:
      - redis_data:/data
    networks:
      - shorturl_network
    environment:
      - REDISINSIGHT_HOST=127.0.0.1  # 只绑定本地
      - REDISINSIGHT_PORT=8001
      - REDIS_PASSWORD=${REDIS_PASSWORD:-your_redis_password}
    command: >
      sh -c "
      redis-stack-server 
      --requirepass ${REDIS_PASSWORD:-your_redis_password}
      --appendonly yes 
      --protected-mode yes
      --bind 0.0.0.0
      --maxmemory 512mb
      --maxmemory-policy allkeys-lru
      "
    healthcheck:
      test: ["CMD", "redis-cli", "-a", "${REDIS_PASSWORD:-your_redis_password}", "ping"]
      interval: 30s
      timeout: 10s
      retries: 3
    restart: unless-stopped

  app:
    build: .
    container_name: shorturl_app
    ports:
      - "8080:8080"
    environment:
      DB_HOST: postgres
      DB_PORT: 5432
      DB_USER: postgres
      DB_PASSWORD: ${POSTGRES_PASSWORD:-your_secure_password}
      DB_NAME: shorturl
      DB_SSLMODE: disable
      REDIS_HOST: redis
      REDIS_PORT: 6379
      REDIS_PASSWORD: ${REDIS_PASSWORD:-your_redis_password}
      REDIS_DB: 0
      APP_PORT: 8080
      APP_ENV: production
      BASE_URL: ${BASE_URL:-https://your-domain.com}
      BLOOM_FILTER_KEY: used_short_codes
      BLOOM_FILTER_CAPACITY: 1000000
      BLOOM_FILTER_ERROR_RATE: 0.001
    depends_on:
      postgres:
        condition: service_healthy
      redis:
        condition: service_healthy
    networks:
      - shorturl_network
    restart: unless-stopped
    # 资源限制
    deploy:
      resources:
        limits:
          memory: 256M
          cpus: '0.5'

volumes:
  postgres_data:
    driver: local
  redis_data:
    driver: local

networks:
  shorturl_network:
    driver: bridge
    ipam:
      config:
        - subnet: 172.20.0.0/16 